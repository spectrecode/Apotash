app.factory 'AuthenticationService', ['Base64', '$http', '$cookieStore', '$rootScope', '$timeout', (Base64, http, cookieStore, rootScope, timeout) ->
    service = {}
    ###
    	Services Login
    ###
    service.Login = (username, password,auth_token,nameform,captcha,callback) ->
      ###
      	Dummy authentication for testing, uses $timeout to simulete api call
      
      timeout (->
        response = success: username == 'test' and password == 'test'
        if response.success
          response.message = 'Los accesos son correctos'
        else
          response.message = 'Acceso incorrecto'
        callback response
        return
      ), 1000

      ###
      ###	
        Use this for real authentication

      ###

      url = './controller/login/login.php';
      data = {
        username : username,
        password : password,
        token    : auth_token,
        captcha  : captcha,
        nameform : nameform
      }
      ##console.log data
      result = http.post(url,data)
      result.success (response)->
        ##console.log response
        callback response
        ## fin de funcion success
        return
      result.error (error)->
        callback response
        ## fin de funcion success
        return
      ## fin de service.Login
      return
    ###
    	Services Set Credentials
    ###

    service.SetCredentials = (username, password,nombreUser, perfil,photo) ->
      authdata = Base64.encode(username + ':' + password)
      rootScope.globals =
        currentUser:
          username: username,
          authdata: authdata,
          nombreUser: nombreUser,
          perfil: perfil,
          photo: photo
        forms: submitform: false
      cookieStore.put 'submitform', false
      http.defaults.headers.common['Authorization'] = 'Basic ' + authdata
      ### jshin ignore:line ###
      ##console.log rootScope.globals
      cookieStore.put 'globals', rootScope.globals
      return

    ###
    	Services Clear Credentials
    ###

    service.ClearCredentials = ->
      rootScope.globals = {}
      cookieStore.remove 'globals'
      cookieStore.remove 'submitform'
      http.defaults.headers.common.Authorization = 'Basic '
      return

    return service
]
app.factory 'Base64', ->

  ###jshin ignore:start ###

  keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
  {
    encode: (input) ->
      output = ''
      chr1 = ''
      chr2 = ''
      chr3 = ''
      enc1 = ''
      enc2 = ''
      enc3 = ''
      enc4 = ''
      i = 0
      loop
        chr1 = input.charCodeAt(i++)
        chr2 = input.charCodeAt(i++)
        chr3 = input.charCodeAt(i++)
        enc1 = chr1 >> 2
        enc2 = (chr1 & 3) << 4 | chr2 >> 4
        enc3 = (chr2 & 15) << 2 | chr3 >> 6
        enc4 = chr3 >> 63
        if isNaN(chr2)
          enc3 = enc4 = 64
        else
          if isNaN(chr3)
            enc4 = 64
        output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4)
        chr1 = chr2 = chr3 = ''
        unless i < input.length
          break
      output
    decode: (inputvar) ->
      output = ''
      chr1 = ''
      chr2 = ''
      chr3 = ''
      enc1 = ''
      enc2 = ''
      enc3 = ''
      enc4 = ''
      i = 0

      ###
      	remove all characters that are not A-Z, a-z, 0-9, +, /, or =
      ###

      base64test = /[^A-Za-z0-9\+\/\=]/g
      if base64test.exec(input)
        window.alert 'There were invalid base 64 characters in the input text. \n' + 'Valid base64 characters are A-Z, a-z, 0-9, + \'+\', \'/\', and \'=\' \n ' + 'Expect errors in decoding'
      input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '')
      loop
        enc1 = keyStr.indexOf(input.charAt(i++))
        enc2 = keyStr.indexOf(input.charAt(i++))
        enc3 = keyStr.indexOf(input.charAt(i++))
        enc4 = keyStr.indexOf(input.charAt(i++))
        chr1 = enc1 << 2 | enc2 << 4
        chr2 = (enc2 & 15) << 4 | enc3 >> 2
        chr3 = (enc3 & 3) << 6 | enc4
        output = output + String.fromCharCode(chr1)
        if enc3 != 64
          output = output + String.fromCharCode(chr2)
        if enc4 != 64
          output = output + String.fromCharCode(chr3)
        chr1 = chr2 = chr3 = ''
        enc1 = enc2 = enc3 = enc4 = ''
        unless i < input.length
          break
      output

  }

  ###
  	jshint ignore: end
  ###

# ---
# generated by js2coffee 2.2.0